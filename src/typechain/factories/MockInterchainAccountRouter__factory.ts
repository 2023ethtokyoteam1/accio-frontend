/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockInterchainAccountRouter,
  MockInterchainAccountRouterInterface,
} from "../MockInterchainAccountRouter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "destinationDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteChainId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundIndex",
        type: "uint256",
      },
    ],
    name: "Dispatched",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_originDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "getInterchainAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061078a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063169a1d7214610046578063bcc1e6d414610076578063f6aa1640146100a6575b600080fd5b610060600480360381019061005b919061028b565b6100d6565b60405161006d9190610304565b60405180910390f35b610090600480360381019061008b91906103d3565b610102565b60405161009d9190610304565b60405180910390f35b6100c060048036038101906100bb9190610447565b6101d4565b6040516100cd9190610496565b60405180910390f35b60007fd0d1fb69b8a65943c27f78188a6ad4b92442124df078058dc77c1e2887bc5c2490509392505050565b6000808383600090600492610119939291906104bb565b90610124919061053a565b905060008060008060008089896004908092610142939291906104bb565b81019061014f919061060d565b9550955095509550955095507feb43b4a35b8f82e58e39c8e214293a1909ee29eb95bf3104a4630af6e1ced7188c8c8989898989898960405161019a999897969594939291906106c7565b60405180910390a17f704e850a7a885e0e3d622d93a158f5238e16807c2c246444a6964b15546f3009975050505050505050949350505050565b6000606f905092915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b610203816101ea565b811461020e57600080fd5b50565b600081359050610220816101fa565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261024b5761024a610226565b5b8235905067ffffffffffffffff8111156102685761026761022b565b5b60208301915083602082028301111561028457610283610230565b5b9250929050565b6000806000604084860312156102a4576102a36101e0565b5b60006102b286828701610211565b935050602084013567ffffffffffffffff8111156102d3576102d26101e5565b5b6102df86828701610235565b92509250509250925092565b6000819050919050565b6102fe816102eb565b82525050565b600060208201905061031960008301846102f5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061034a8261031f565b9050919050565b61035a8161033f565b811461036557600080fd5b50565b60008135905061037781610351565b92915050565b60008083601f84011261039357610392610226565b5b8235905067ffffffffffffffff8111156103b0576103af61022b565b5b6020830191508360018202830111156103cc576103cb610230565b5b9250929050565b600080600080606085870312156103ed576103ec6101e0565b5b60006103fb87828801610211565b945050602061040c87828801610368565b935050604085013567ffffffffffffffff81111561042d5761042c6101e5565b5b6104398782880161037d565b925092505092959194509250565b6000806040838503121561045e5761045d6101e0565b5b600061046c85828601610211565b925050602061047d85828601610368565b9150509250929050565b6104908161033f565b82525050565b60006020820190506104ab6000830184610487565b92915050565b600080fd5b600080fd5b600080858511156104cf576104ce6104b1565b5b838611156104e0576104df6104b6565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600082821b905092915050565b600061054683836104f6565b826105518135610501565b925060048210156105915761058c7fffffffff000000000000000000000000000000000000000000000000000000008360040360080261052d565b831692505b505092915050565b60006105a48261031f565b9050919050565b6105b481610599565b81146105bf57600080fd5b50565b6000813590506105d1816105ab565b92915050565b6000819050919050565b6105ea816105d7565b81146105f557600080fd5b50565b600081359050610607816105e1565b92915050565b60008060008060008060c0878903121561062a576106296101e0565b5b600061063889828a01610211565b965050602061064989828a016105c2565b955050604061065a89828a016105f8565b945050606061066b89828a016105c2565b935050608061067c89828a016105f8565b92505060a061068d89828a016105f8565b9150509295509295509295565b6106a3816101ea565b82525050565b6106b281610501565b82525050565b6106c1816105d7565b82525050565b6000610120820190506106dd600083018c61069a565b6106ea602083018b610487565b6106f7604083018a6106a9565b610704606083018961069a565b6107116080830188610487565b61071e60a08301876106b8565b61072b60c0830186610487565b61073860e08301856106b8565b6107466101008301846106b8565b9a995050505050505050505056fea26469706673582212206fdd8480a85f697f4640c9157db4ea7ac51e7732d2708f8a0d16ab4055abcebf64736f6c63430008130033";

export class MockInterchainAccountRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockInterchainAccountRouter> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockInterchainAccountRouter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockInterchainAccountRouter {
    return super.attach(address) as MockInterchainAccountRouter;
  }
  connect(signer: Signer): MockInterchainAccountRouter__factory {
    return super.connect(signer) as MockInterchainAccountRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInterchainAccountRouterInterface {
    return new utils.Interface(_abi) as MockInterchainAccountRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockInterchainAccountRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockInterchainAccountRouter;
  }
}
