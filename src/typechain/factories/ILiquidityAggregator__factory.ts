/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ILiquidityAggregator,
  ILiquidityAggregatorInterface,
} from "../ILiquidityAggregator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "buyFuncSelector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "buyFuncDataEncoded",
            type: "bytes",
          },
        ],
        internalType: "struct ILiquidityAggregator.NftInfo",
        name: "nftInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "chainId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "localWeth",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "localWethAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidityAggregator.Fund[]",
        name: "funds",
        type: "tuple[]",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "localWeth",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "localWethAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fundIndex",
        type: "uint256",
      },
    ],
    name: "getUserTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ILiquidityAggregator__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidityAggregatorInterface {
    return new utils.Interface(_abi) as ILiquidityAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILiquidityAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILiquidityAggregator;
  }
}
